## Application Configuration
spring.application.name=order-service
server.port=0

## Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/order-service
spring.datasource.username=postgres
spring.datasource.password=docker
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

## GRPC Configuration
inventory-service.grpc.hostname=localhost
inventory-service.grpc.port=9091

## Circuit Breaker
resilience4j.circuitbreaker.circuit-breaker-aspect-order=1
resilience4j.circuitbreaker.instances.checkIfProductInInventory.register-health-indicator=true
resilience4j.circuitbreaker.instances.checkIfProductInInventory.sliding-window-size=10
resilience4j.circuitbreaker.instances.checkIfProductInInventory.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.checkIfProductInInventory.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.checkIfProductInInventory.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.checkIfProductInInventory.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.checkIfProductInInventory.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.checkIfProductInInventory.event-consumer-buffer-size=10

## Eureka Server
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

