spring.application.name=inventory-service
server.port=0

spring.datasource.url=jdbc:postgresql://localhost:5432/inventory-service
spring.datasource.username=postgres
spring.datasource.password=docker
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

## GRPC Server Configuration
grpc.server.port=9091

## Product Service GRPC Connection
product-service.grpc.hostname=localhost
product-service.grpc.port=9090

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

## Circuit Breaker
resilience4j.circuitbreaker.circuit-breaker-aspect-order=1
resilience4j.circuitbreaker.instances.checkIfProductExists.register-health-indicator=true
resilience4j.circuitbreaker.instances.checkIfProductExists.sliding-window-size=10
resilience4j.circuitbreaker.instances.checkIfProductExists.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.checkIfProductExists.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.checkIfProductExists.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.checkIfProductExists.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.checkIfProductExists.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.checkIfProductExists.event-consumer-buffer-size=10




## Eureka Server
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}